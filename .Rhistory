qqline(residuals_red, col = "red")}
# Plot QQ plot and histogram for residuals
qqnorm(residuals_red, main = "QQ Plot of Residuals", col ='blue')
qqline(residuals_red, col = "red")}
full_model <- lm(Home_Price_Index_log ~ Industrial_Inputs_Index_log + Shipping_Price_Index_log + Forex_Index_log + Industrial_Production_Index_log +
Construction_Licences_Area_log + Google_Trends_Housing_log +
Unemployment_Rate + Interest_Rate, data = data_reduced)
# Perform backward selection based on AIC
backward_model <- step(full_model,
direction = "backward")
# Regularization------------
# Done over full model
# Load the packages
library(glmnet)
# Regularization------------
# Done over full model
# Load the packages
library(glmnet)
library(caret)
library(Metrics)
# Subset the dataframe by selecting specific columns
data_final <- subset(data_reduced, select = c(Home_Prices_Index_log, Industrial_Inputs_Index_log, Metals_Price_Index_log,
Energy_Price_Index_log, Shipping_Price_Index_log, Forex_Index_log,
Industrial_Production_Index_log, Construction_Licences_Area_log,
Finished_Constructions, Google_Trends_Housing_log,
Unemployment_Rate, Interest_Rate))
# Subset the dataframe by selecting specific columns
data_final <- subset(data_reduced, select = c(Home_Price_Index_log, Industrial_Inputs_Index_log, Metals_Price_Index_log,
Energy_Price_Index_log, Shipping_Price_Index_log, Forex_Index_log,
Industrial_Production_Index_log, Construction_Licences_Area_log,
Finished_Constructions, Google_Trends_Housing_log,
Unemployment_Rate, Interest_Rate))
# Sample data preparation
# Assuming your data frame is `data_final` and your response variable is `y_log`
set.seed(123)  # For reproducibility
trainIndex <- createDataPartition(data_final$Home_Prices_Index_log, p = .8,
list = FALSE,
times = 1)
trainIndex <- createDataPartition(data_final$Home_Price_Index_log, p = .8,
list = FALSE,
times = 1)
data_train <- data_final[ trainIndex,]
data_test  <- data_final[-trainIndex,]
# Extract predictors and response
X_train <- model.matrix(Home_Price_Index_log ~ ., data_train)[, -1]  # Remove the intercept column
y_train <- data_train$Home_Price_Index_log
X_test <- model.matrix(Home_Price_Index_log ~ ., data_test)[, -1]  # Remove the intercept column
y_test <- data_test$Home_Price_Index_log
# Fit LASSO regression model
lasso_model <- cv.glmnet(X_train, y_train, alpha = 1)  # alpha = 1 for LASSO
lasso_best_lambda <- lasso_model$lambda.min
lasso_predictions <- predict(lasso_model, s = lasso_best_lambda, newx = X_test)
lasso_mse <- mse(y_test, lasso_predictions)
lasso_r2 <- R2(y_test, lasso_predictions)
cat("LASSO Regression MSE:", lasso_mse, "\n")
cat("LASSO Regression R2:", lasso_r2, "\n")
# Coefficients at best lambda
lasso_coefficients <- coef(lasso_model, s = lasso_best_lambda)
print(lasso_coefficients)
lasso_residuals <- y_test - lasso_predictions
# Plot predicted vs actual values
{plot(y_test, lasso_predictions,
xlab = "Actual Values", ylab = "Predicted Values",
main = "Predicted vs Actual Values")
abline(0, 1, col = "red")  # Add a line y = x for reference
}
{qqnorm(lasso_residuals)
qqline(lasso_residuals, col = "red")}
{qqnorm(lasso_residuals)
qqline(lasso_residuals, col = "red")}
# Fit Ridge regression model
ridge_model <- cv.glmnet(X_train, y_train, alpha = 0)  # alpha = 0 for Ridge
ridge_best_lambda <- ridge_model$lambda.min
ridge_predictions <- predict(ridge_model, s = ridge_best_lambda, newx = X_test)
ridge_mse <- mse(y_test, ridge_predictions)
ridge_r2 <- R2(y_test, ridge_predictions)
cat("Ridge Regression MSE:", ridge_mse, "\n")
cat("Ridge Regression R2:", ridge_r2, "\n")
# Fit Ridge regression model
ridge_model <- cv.glmnet(X_train, y_train, alpha = 0)  # alpha = 0 for Ridge
ridge_best_lambda <- ridge_model$lambda.min
ridge_predictions <- predict(ridge_model, s = ridge_best_lambda, newx = X_test)
ridge_mse <- mse(y_test, ridge_predictions)
ridge_r2 <- R2(y_test, ridge_predictions)
cat("Ridge Regression MSE:", ridge_mse, "\n")
cat("Ridge Regression R2:", ridge_r2, "\n")
```{r}
# Coefficients at best lambda
ridge_coefficients <- coef(ridge_model, s = ridge_best_lambda)
print(ridge_coefficients)
ridge_residuals <- y_test - ridge_predictions
# Plot predicted vs actual values
{plot(y_test, ridge_predictions,
xlab = "Actual Values", ylab = "Predicted Values",
main = "Predicted vs Actual Values")
abline(0, 1, col = "red")  # Add a line y = x for reference
}
{qqnorm(ridge_residuals)
qqline(ridge_residuals, col = "red")}
results <- data.frame(
Model = c("Linear Regression", "LASSO Regression", "Ridge Regression"),
MSE = c(lm_mse, lasso_mse, ridge_mse),
R2 = c(lm_r2, lasso_r2, ridge_r2)
)
# Fit linear regression model
lm_model <- lm(Home_Prices_Index_log ~ ., data = data_train)
# Predict and evaluate linear regression model
lm_predictions <- predict(lm_model, newdata = data_test)
# Fit linear regression model
lm_model <- lm(Home_Price_Index_log ~ ., data = data_train)
# Predict and evaluate linear regression model
lm_predictions <- predict(lm_model, newdata = data_test)
lm_mse <- mse(y_test, lm_predictions)
lm_r2 <- R2(y_test, lm_predictions)
cat("Linear Regression MSE:", lm_mse, "\n")
cat("Linear Regression R2:", lm_r2, "\n")
# Fit LASSO regression model
lasso_model <- cv.glmnet(X_train, y_train, alpha = 1)  # alpha = 1 for LASSO
results <- data.frame(
Model = c("Linear Regression", "LASSO Regression", "Ridge Regression"),
MSE = c(lm_mse, lasso_mse, ridge_mse),
R2 = c(lm_r2, lasso_r2, ridge_r2)
)
print(results)
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=4, fig.height=5}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=2, fig.height=3}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=2, fig.height=3}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=2, fig.height=3}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=3, fig.height=3}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=6, fig.height=7}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(5, 4, 4, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=6, fig.height=7}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=4, fig.height=5}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=3, fig.height=4}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
{
par(mfrow = c(3, 1),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
par(mfrow = c(1, 3),mar = c(5, 5, 4, 2) + 0.1)
{
par(mfrow = c(1, 3),mar = c(5, 5, 4, 2) + 0.1)
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=3, fig.height=4}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
{
par(mfrow = c(1, 3))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
{
par(mfrow = c(3, 1))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=3, fig.height=5}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
{
par(mfrow = c(3, 1))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
```{r,echo = FALSE,fig.width=5, fig.height=3}
# reset margins
# Reset margins to default values
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1, 1))
# dependent variable
data_reduced$category <- as.factor(clean_data$date)
# Set up the plot without drawing the points
{plot(1:length(data_reduced$category), clean_data$Home_Price_Index, type = "n", xaxt = "n",xlab="date", ylab = "Home Price Index", main = "Evolution of Home Prices over time")
# Add the categorical labels to the x-axis
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
# Add the lines and points to the plot
lines(1:length(data_reduced$category), data_reduced$Home_Price_Index, type = "o", col = "blue", pch = 16)}
# Histograms/Boxplots of the percentual variations
# Subset only percentual changes
data_percentual_variation <- data_percentual_variation %>%
select(pct_var_Home_Price_Index, pct_var_Industrial_Inputs_Index, pct_var_Metals_Price_Index, pct_var_Energy_Price_Index,
pct_var_Shipping_Price_Index, pct_var_Forex_Index,pct_var_Industrial_Production_Index,
pct_var_Construction_Licences_Area, pct_var_Finished_Constructions,
pct_var_Google_Trends_Housing,
Unemployment_Rate, Interest_Rate)
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1, 2))
# Y
{boxplot(data_percentual_variation$pct_var_Home_Price_Index , horizontal=TRUE  ,frame=F,main = "Boxplot of Percentual Variation Home Price Index")
hist(data_percentual_variation$pct_var_Home_Price_Index , breaks=40,main = "Histogram of Percentual Variation Home Price Index",xlab = "Percentual Variation")}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mfrow = c(3, 1), mar = c(5, 4, 2, 2) + 0.1, oma = c(0, 0, 0, 0))
{
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
{
par(mfrow = c(3, 1))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
par(mar = c(2, 2, 2, 2) + 0.1)
par(mfrow = c(3, 1))
{
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
par(mar = c(2, 2, 2, 2) + 0.1)
par(mfrow = c(3, 1))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
{
par(mar = c(2, 2, 2, 2) + 0.1)
par(mfrow = c(3, 1))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
# Create the boxplot without x-axis labels
# Adjusting the margins: bottom, left, top, right
{
par(mfrow = c(3, 1), mar = c(5, 4, 2, 2) + 0.1, oma = c(0, 0, 0, 0))
boxplot(data_reduced$Shipping_Price_Index, horizontal=TRUE  ,frame=F,main = "Shipping Price Index")
boxplot(data_reduced$Unemployment_Rate, horizontal=TRUE  ,frame=F,main = "Unemployment Rate")
boxplot(data_reduced$Interest_Rate, horizontal=TRUE  ,frame=F,main = "Interest Rate")
}
# Histograms/Boxplots of the percentual variations
# Subset only percentual changes
data_percentual_variation <- data_percentual_variation %>%
select(pct_var_Home_Price_Index, pct_var_Industrial_Inputs_Index, pct_var_Metals_Price_Index, pct_var_Energy_Price_Index,
pct_var_Shipping_Price_Index, pct_var_Forex_Index,pct_var_Industrial_Production_Index,
pct_var_Construction_Licences_Area, pct_var_Finished_Constructions,
pct_var_Google_Trends_Housing,
Unemployment_Rate, Interest_Rate)
# Y
{
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1, 2))
boxplot(data_percentual_variation$pct_var_Home_Price_Index , horizontal=TRUE  ,frame=F,main = "Boxplot of Percentual Variation Home Price Index")
hist(data_percentual_variation$pct_var_Home_Price_Index , breaks=40,main = "Histogram of Percentual Variation Home Price Index",xlab = "Percentual Variation")}
e
# Histograms/Boxplots of the percentual variations
# Subset only percentual changes
data_percentual_variation <- data_percentual_variation %>%
select(pct_var_Home_Price_Index, pct_var_Industrial_Inputs_Index, pct_var_Metals_Price_Index, pct_var_Energy_Price_Index,
pct_var_Shipping_Price_Index, pct_var_Forex_Index,pct_var_Industrial_Production_Index,
pct_var_Construction_Licences_Area, pct_var_Finished_Constructions,
pct_var_Google_Trends_Housing,
Unemployment_Rate, Interest_Rate)
# Y
{
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1, 2))
boxplot(data_percentual_variation$pct_var_Home_Price_Index , horizontal=TRUE  ,frame=F,main = "Boxplot of Percentual Variation Home Price Index")
hist(data_percentual_variation$pct_var_Home_Price_Index , breaks=40,main = "Histogram of Percentual Variation Home Price Index",xlab = "Percentual Variation")}
# Histograms/Boxplots of the percentual variations
# Subset only percentual changes
data_percentual_variation <- data_percentual_variation %>%
select(pct_var_Home_Price_Index, pct_var_Industrial_Inputs_Index, pct_var_Metals_Price_Index, pct_var_Energy_Price_Index,
pct_var_Shipping_Price_Index, pct_var_Forex_Index,pct_var_Industrial_Production_Index,
pct_var_Construction_Licences_Area, pct_var_Finished_Constructions,
pct_var_Google_Trends_Housing,
Unemployment_Rate, Interest_Rate)
# Y
{
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1, 2))
boxplot(data_percentual_variation$pct_var_Home_Price_Index , horizontal=TRUE  ,frame=F,main = "Boxplot of Percentual Variation Home Price Index")
hist(data_percentual_variation$pct_var_Home_Price_Index , breaks=40,main = "Histogram of Percentual Variation Home Price Index",xlab = "Percentual Variation")}
```{r,echo = FALSE,fig.width=9, fig.height=4,fig.align='center'}
# Histograms/Boxplots of the percentual variations
# Subset only percentual changes
data_percentual_variation <- data_percentual_variation %>%
select(pct_var_Home_Price_Index, pct_var_Industrial_Inputs_Index, pct_var_Metals_Price_Index, pct_var_Energy_Price_Index,
pct_var_Shipping_Price_Index, pct_var_Forex_Index,pct_var_Industrial_Production_Index,
pct_var_Construction_Licences_Area, pct_var_Finished_Constructions,
pct_var_Google_Trends_Housing,
Unemployment_Rate, Interest_Rate)
# Y
{
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1, 2))
boxplot(data_percentual_variation$pct_var_Home_Price_Index , horizontal=TRUE  ,frame=F,main = "Boxplot of Percentual Variation Home Price Index")
hist(data_percentual_variation$pct_var_Home_Price_Index , breaks=40,main = "Histogram of Percentual Variation Home Price Index",xlab = "Percentual Variation")}
# Histograms-----------------
par(mar = c(2, 2, 2, 2))  # Adjust margins to make them smaller
# Adjust layout to fit all histograms
par(mfrow = c(3, 5))  # Example layout; adjust if necessary
for (i in 1:ncol(data_percentual_variation)) {
hist(data_percentual_variation[[i]], main = names(data_percentual_variation)[i], xlab = names(data_percentual_variation)[i], col = "blue", border = "black")
}
# Reset layout
par(mfrow = c(1, 1))
# Boxplot for all at once
#install.packages("reshape2")
library(reshape2)
# Melt the dataframe to long format
# Melt the dataframe to long format
data_long <- melt(data_percentual_variation)
# Adjust graphical parameters
par(mar = c(7, 5, 4, 2) + 0.1)  # Increase bottom margin
# Create the boxplot without x-axis labels
{boxplot(value ~ variable, data = data_long,
main = "Boxplot of Multiple Variables",
xlab = "", ylab = "Value",
col = "lightblue", border = "darkblue", xaxt = 'n')
# Add custom x-axis labels at a 45-degree angle
labels <- levels(data_long$variable)
text(x = 1:length(labels), y = par("usr")[3] - 0.5, labels = labels, srt = 45, adj = 1, xpd = TRUE, cex = 0.8)
}
# Reset layout
par(mfrow = c(1, 1))
# Boxplot for all at once
#install.packages("reshape2")
library(reshape2)
# Melt the dataframe to long format
# Melt the dataframe to long format
data_long <- melt(data_percentual_variation)
# Adjust graphical parameters
par(mar = c(5, 5, 4, 2) + 0.1)
# Create the boxplot without x-axis labels
{boxplot(value ~ variable, data = data_long,
main = "Boxplot of Multiple Variables",
xlab = "", ylab = "Value",
col = "lightblue", border = "darkblue", xaxt = 'n')
# Add custom x-axis labels at a 45-degree angle
labels <- levels(data_long$variable)
text(x = 1:length(labels), y = par("usr")[3] - 0.5, labels = labels, srt = 45, adj = 1, xpd = TRUE, cex = 0.8)
}
# Reset layout
par(mfrow = c(1, 1))
# Boxplot for all at once
#install.packages("reshape2")
library(reshape2)
# Melt the dataframe to long format
# Melt the dataframe to long format
data_long <- melt(data_percentual_variation)
# Create the boxplot without x-axis labels
{par(mar = c(5, 5, 4, 2) + 0.1)
boxplot(value ~ variable, data = data_long,
main = "Boxplot of Multiple Variables",
xlab = "", ylab = "Value",
col = "lightblue", border = "darkblue", xaxt = 'n')
# Add custom x-axis labels at a 45-degree angle
labels <- levels(data_long$variable)
text(x = 1:length(labels), y = par("usr")[3] - 0.5, labels = labels, srt = 45, adj = 1, xpd = TRUE, cex = 0.8)
}
```{r,echo = FALSE,fig.width=4, fig.height=4}
# Reset layout
# Reset margins to default values
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(mfrow = c(3, 1))
# dependent variable
data_reduced$category <- as.factor(clean_data$date)
# Set up the plot without drawing the points
{par(mar = c(5.1, 4.1, 4.1, 2.1))
par(mfrow = c(3, 1))
plot(1:length(data_reduced$category), clean_data$Shipping_Price_Index, type = "n", xaxt = "n",xlab="date", ylab = "Shipping Price Index", main = "Evolution of Shipping Prices Index over time")
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
lines(1:length(data_reduced$category), data_reduced$Shipping_Price_Index, type = "o", col = "blue", pch = 16)
plot(1:length(data_reduced$category), clean_data$Energy_Price_Index, type = "n", xaxt = "n",xlab="date", ylab = "Energy Price Index", main = "Evolution of Energy Prices Index over time")
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
lines(1:length(data_reduced$category), data_reduced$Energy_Price_Index, type = "o", col = "blue", pch = 16)
plot(1:length(data_reduced$category), clean_data$Industrial_Production_Index, type = "n", xaxt = "n",xlab="date", ylab = "Industry Production Index", main = "Evolution of Industrial Production Index over time")
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
lines(1:length(data_reduced$category), data_reduced$Industrial_Production_Index, type = "o", col = "blue", pch = 16)
}
```{r,echo = FALSE,fig.width=3, fig.height=6}
# Reset layout
# Reset margins to default values
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(mfrow = c(3, 1))
# dependent variable
data_reduced$category <- as.factor(clean_data$date)
# Set up the plot without drawing the points
{par(mar = c(5.1, 4.1, 4.1, 2.1))
par(mfrow = c(3, 1))
plot(1:length(data_reduced$category), clean_data$Shipping_Price_Index, type = "n", xaxt = "n",xlab="date", ylab = "Shipping Price Index", main = "Evolution of Shipping Prices Index over time")
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
lines(1:length(data_reduced$category), data_reduced$Shipping_Price_Index, type = "o", col = "blue", pch = 16)
plot(1:length(data_reduced$category), clean_data$Energy_Price_Index, type = "n", xaxt = "n",xlab="date", ylab = "Energy Price Index", main = "Evolution of Energy Prices Index over time")
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
lines(1:length(data_reduced$category), data_reduced$Energy_Price_Index, type = "o", col = "blue", pch = 16)
plot(1:length(data_reduced$category), clean_data$Industrial_Production_Index, type = "n", xaxt = "n",xlab="date", ylab = "Industry Production Index", main = "Evolution of Industrial Production Index over time")
axis(1, at = 1:length(data_reduced$category), labels = data_reduced$category)
lines(1:length(data_reduced$category), data_reduced$Industrial_Production_Index, type = "o", col = "blue", pch = 16)
}
View(data_test)
View(data_test)
```{r, echo=FALSE}
lasso_residuals <- y_test - lasso_predictions
# Plot predicted vs actual values
{
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(mfrow = c(1, 2))
plot(y_test, lasso_predictions,
xlab = "Actual Values", ylab = "Predicted Values",
main = "Predicted vs Actual Values")
abline(0, 1, col = "red")  # Add a line y = x for reference
qqnorm(lasso_residuals)
qqline(lasso_residuals, col = "red")}
